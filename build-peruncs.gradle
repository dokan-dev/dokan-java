
plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'maven-publish'
}

tasks.withType(JavaCompile) {
    options.incremental = true
    options.encoding = 'UTF-8'
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation" << "-Xlint:deprecation"
}

dependencies {
    implementation (group:'net.java.dev.jna', name:'jna', version:jnaVersion)

    api (group:'net.java.dev.jna', name:'jna-platform', version:jnaVersion)
    api (group:'org.slf4j', name:'slf4j-api', version:slf4jVersion) //is this correct or should it be implementation?

    testImplementation (group:'org.slf4j', name:'slf4j-simple', version:slf4jVersion)
    testImplementation (group:'org.junit.jupiter', name:'junit-jupiter-api', version:junitVersion)
    
    testRuntimeOnly (group:'org.junit.jupiter', name:'junit-jupiter-engine', version:junitVersion)
}

// In this section you declare where to find the dependencies of your project
repositories {
    mavenCentral()
}


test {
    useJUnitPlatform()
}

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allJava
}

task javadocJar(type: Jar) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}


task showProjectInfo(){
    doLast() {
        println project.name
        println project.version
        println project.description
    }
}

tasks {
    jar {
        manifest {
            attributes(
                    'Implementation-Title': project.name,
                    'Implementation-Version': project.version,
                    'Specification-Title': project.description,
                    'Specification-Version': project.version,
            )
        }
    }
}


publishing {
    publications {
        release(MavenPublication) {
            from components.java
            groupId group
            artifactId artifact
            artifact sourcesJar
            artifact javadocJar
            pom {
                name = project.name
                description = project.description
                url = scmUrl
                licenses {
                    license {
                        name = licenseName
                        url = licenseUrl
                        distribution = "repo"
                    }
                }
                developers {
                    developer {
                        id = maintainerId
                        name = maintainer
                        email = maintainerMail
                        timezone = '+1'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/dokan-dev/dokan-java.git'
                    url = scmUrl
                }
            }
        }
    }
    afterEvaluate {
        repositories {
            maven {
                name = "GitHubPackages"
                url = uri("https://maven.pkg.github.com/peruncs/dokan-java")
                credentials {
                    username githubUser
                    password githubToken
                }
            }
        }
    }
}




javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}
